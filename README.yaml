---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

name: github-action-atmos-terraform-apply

tags:
  - github-action
  - atmos
  - terraform

# License of this project
license: "APACHE2"

github_repo: cloudposse/github-action-atmos-terraform-apply

badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/github-action-atmos-terraform-apply.svg"
    url: "https://github.com/cloudposse/github-action-atmos-terraform-apply/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related: []

description: This Github Action is used to run Terraform apply for a single, Atmos-supported component with a saved planfile in S3 and DynamoDB.

introduction: |-
  This Github Action is used to run Terraform apply for a single, Atmos-supported component with a saved planfile in S3 and DynamoDB.

  Before running this action, first create and store a planfile with the companion action, [github-action-atmos-terraform-plan](https://github.com/cloudposse/github-action-atmos-terraform-plan).

  For more, see [Atmos GitHub Action Integrations](https://atmos.tools/integrations/github-actions/atmos-terraform-apply)

references:
  - name: "github-action-atmos-affected-stacks"
    description: "Companion GitHub Action that runs the atmos describe affected command"
    url: "https://github.com/cloudposse/github-action-atmos-affected-stacks"
  - name: "github-action-atmos-terraform-plan"
    description: "Companion GitHub Action to create and store Terraform plans for a given component"
    url: "https://github.com/cloudposse/github-action-atmos-terraform-plan"
  - name: "github-action-terraform-plan-storage"
    description: "GitHub Action to store Terraform plans"
    url: "https://github.com/cloudposse/github-action-terraform-plan-storage"

usage: |-
  ### Prerequisites

  This GitHub Action requires AWS access for two different purposes. This action will attempt to first pull a Terraform planfile from a S3 Bucket with metadata in a DynamoDB table with one role. 
  Then the action will run `terraform apply` against that component with another role. We recommend configuring 
  [OpenID Connect with AWS](https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services) 
  to allow GitHub to assume roles in AWS and then deploying both a Terraform Apply role and a Terraform State role. 
  For Cloud Posse documentation on setting up GitHub OIDC, see our [`github-oidc-provider` component](https://docs.cloudposse.com/components/library/aws/github-oidc-provider/).

  In order to retrieve Terraform Plan Files (not to be confused with Terraform State files, e.g. `tfstate`), we configure an S3 Bucket to store plan files and a DynamoDB table to track plan metadata. Both need to be deployed before running
  this action. For more on setting up those components, see the [`gitops` component](https://docs.cloudposse.com/components/library/aws/gitops/). This action will then use the [github-action-terraform-plan-storage](https://github.com/cloudposse/github-action-terraform-plan-storage) action to update these resources.

  ### Config

  The action expects the atmos configuration file `atmos.yaml` to be present in the repository and contains.
  The config should have the following structure:
  
  ```yaml
  integrations:
    github:
      gitops:
        terraform-version: 1.5.2
        infracost-enabled: false
        storage:
          region: us-east-2
          bucket: cptest-core-ue2-auto-gitops
          table: cptest-core-ue2-auto-gitops-plan-storage
          role: arn:aws:iam::xxxxxxxxxxxx:role/cptest-core-ue2-auto-gitops-gha
        role:
          plan: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
          apply: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
        matrix:
          sort-by: .stack_slug
          group-by: .stack_slug | split("-") | [.[0], .[2]] | join("-")
  ```
  
  > [!IMPORTANT]
  > **Please note!** the action works only with `atmos >= 1.63.0`. If you are using `atmos < 1.63.0` please use `v2` of the action.      
  
  ### Workflow example

  In this example, the action is triggered when certain events occur, such as a manual workflow dispatch or the opening, synchronization, or reopening of a pull request, specifically on the main branch. It specifies specific permissions related to assuming roles in AWS. Within the "apply" job, the "component" and "stack" are hardcoded (`foobar` and `plat-ue2-sandbox`). In practice, these are usually derived from another action. 
  
  > [!TIP] 
  We recommend combining this action with the [`affected-stacks`](https://atmos.tools/integrations/github-actions/affected-stacks) GitHub Action inside a matrix to plan all affected stacks in parallel.

  ```yaml
    name: "atmos-terraform-apply"

    on:
      workflow_dispatch:
      pull_request:
        types:
          - closed
        branches:
          - main

    # These permissions are required for GitHub to assume roles in AWS
    permissions:
      id-token: write
      contents: read

    jobs:
      apply:
        runs-on: ubuntu-latest
        steps:
          - name: Terraform Apply
            uses: cloudposse/github-action-atmos-terraform-apply@v2
            with:
              component: "foobar"
              stack: "plat-ue2-sandbox"
              atmos-config-path: ./
  ```

  ### Migrating from `v1` to `v2`
  
  `v2` works only with `atmos >= 1.63.0`
  
  `v2` drops `install-terraform` input because terraform is not required for affected stacks call
  
  `v2` drop `atmos-gitops-config-path` input and  `./.github/config/atmos-gitops.yaml`  config. Now you have to use GitHub actions inputs and `atmos.yaml` to specify that configuration.
  
  The following configuration fields now moved to GitHub action inputs with the same names
  
  |         name            |
  |-------------------------|
  | `atmos-version`         |
  | `atmos-config-path`     |
  
  
  The following configuration fields are now moved to `atmos.yaml` 
  
  |              name        |    path in `atmos.yaml`                         |
  |--------------------------|-------------------------------------------------|
  | `aws-region`             | `integrations.github.gitops.storage.region`     | 
  | `terraform-state-bucket` | `integrations.github.gitops.storage.bucket`     |
  | `terraform-state-table`  | `integrations.github.gitops.storage.table`      |
  | `terraform-state-role`   | `integrations.github.gitops.storage.role`       |
  | `terraform-plan-role`    | `integrations.github.gitops.role.plan`          |
  | `terraform-apply-role`   | `integrations.github.gitops.role.apply`         |
  | `terraform-version`      | `integrations.github.gitops.terraform-version`  |
  | `enable-infracost`       |  `integrations.github.gitops.infracost-enabled` |
  | `sort-by`                |  `integrations.github.gitops.matrix.sort-by`    |
  | `group-by`               |  `integrations.github.gitops.matrix.group-by`   |
  
  
  If you want `v2` having the same behaviour as `v1` you should  have 
  
  `atmos.yaml`
  ```yaml
  ...
  
  integrations:
    github:
      gitops:
        terraform-version: 1.5.2
        infracost-enabled: false
        storage:
          region: us-east-2
          bucket: cptest-core-ue2-auto-gitops
          table: cptest-core-ue2-auto-gitops-plan-storage
          role: arn:aws:iam::xxxxxxxxxxxx:role/cptest-core-ue2-auto-gitops-gha
        role:
          plan: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
          apply: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
        matrix:
          sort-by: .stack_slug
          group-by: .stack_slug | split("-") | [.[0], .[2]] | join("-")
  
  ...
  ```
  
  `.github/workflows/main.yaml`
  ```yaml
    - name: Plan Atmos Component
      uses: cloudposse/github-action-atmos-terraform-apply@v2
      with:
        component: "foobar"
        stack: "plat-ue2-sandbox"
        atmos-config-path: ./
        atmos-version: 1.63.0
  ``` 
  
  same behaviour as
  
  `./.github/config/atmos-gitops.yaml`
  ```yaml
  atmos-version: 1.45.3
  atmos-config-path: ./rootfs/usr/local/etc/atmos/
  terraform-state-bucket: cptest-core-ue2-auto-gitops
  terraform-state-table: cptest-core-ue2-auto-gitops
  terraform-state-role: arn:aws:iam::xxxxxxxxxxxx:role/cptest-core-ue2-auto-gitops-gha
  terraform-plan-role: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
  terraform-apply-role: arn:aws:iam::yyyyyyyyyyyy:role/cptest-core-gbl-identity-gitops
  terraform-version: 1.5.2
  aws-region: us-east-2
  enable-infracost: false
  sort-by: .stack_slug
  group-by: .stack_slug | split("-") | [.[0], .[2]] | join("-")  
  ```
  
  `.github/workflows/main.yaml`
  ```yaml
    - name: Plan Atmos Component
      uses: cloudposse/github-action-atmos-terraform-apply@v1
      with:
        component: "foobar"
        stack: "plat-ue2-sandbox"
        atmos-gitops-config-path: ./.github/config/atmos-gitops.yaml
  ```
  
  
  
  ### Migrating from `v0` to `v1`
  
  1. `v1` drops the `component-path` variable and instead fetches if directly from the [`atmos.yaml` file](https://atmos.tools/cli/configuration/) automatically. Simply remove the `component-path` argument from your invocations of the `cloudposse/github-action-atmos-terraform-apply` action.
  2. `v1` moves most of the `inputs` to the Atmos GitOps config path `./.github/config/atmos-gitops.yaml`. Simply create this file, transfer your settings to it, then remove the corresponding arguments from your invocations of the `cloudposse/github-action-atmos-terraform-apply` action.

  |         name             |
  |--------------------------|
  | `atmos-version`          |
  | `atmos-config-path`      |
  | `terraform-state-bucket` |
  | `terraform-state-table`  |
  | `terraform-state-role`   |
  | `terraform-plan-role`    |
  | `terraform-apply-role`   |
  | `terraform-version`      |
  | `aws-region`             |
  | `enable-infracost`       |
  
  
  If you want the same behavior in `v1` as in `v0` you should create config `./.github/config/atmos-gitops.yaml` with the same variables as in `v0` inputs.
  
  ```yaml
  - name: Terraform apply
    uses: cloudposse/github-action-atmos-terraform-apply@v1
    with:
      atmos-gitops-config-path: ./.github/config/atmos-gitops.yaml
      component: "foobar"
      stack: "plat-ue2-sandbox"
  ```
  
  Which would produce the same behavior as in `v0`, doing this:
  
  ```yaml
  - name: Terraform apply
    uses: cloudposse/github-action-atmos-terraform-apply@v0
    with:
      component: "foobar"
      stack: "plat-ue2-sandbox"
      component-path: "components/terraform/s3-bucket"
      terraform-apply-role: "arn:aws:iam::111111111111:role/acme-core-gbl-identity-gitops"
      terraform-state-bucket: "acme-core-ue2-auto-gitops"
      terraform-state-role: "arn:aws:iam::999999999999:role/acme-core-ue2-auto-gitops-gha"
      terraform-state-table: "acme-core-ue2-auto-gitops"
      aws-region: "us-east-2"
  ```

include:
  - "docs/github-action.md"

# Contributors to this project
contributors:
