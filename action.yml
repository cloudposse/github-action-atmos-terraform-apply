name: 'GitHub Action Atmos Terraform Apply'
description: 'GitHub Action Atmos Terraform Apply'
author: hello@cloudposse.com
branding:
  icon: 'server'
  color: 'white'
inputs:
  component:
    description: "The name of the component to apply."
    required: true
  stack:
    description: "The stack name for the given component."
    required: true
  sha:
    description: "Commit SHA to apply. Default: github.sha"
    required: true
    default: "${{ github.event.pull_request.head.sha }}"
  atmos-gitops-config-path:
    description: The path to the atmos-gitops.yaml file
    required: false
    default: ./.github/config/atmos-gitops.yaml
  infracost-api-key:
    description: "Infracost API key"
    required: false
  branding-logo-image:
    description: "Branding logo image url"
    required: false
    default: "https://cloudposse.com/logo-300x69.svg"
  branding-logo-url:
    description: "Branding logo url"
    required: false
    default: "https://cloudposse.com/"
  debug:
    description: "Enable action debug mode. Default: 'false'"
    default: 'false'
    required: false
  token:
    description:
      Used to pull node distributions for Atmos from Cloud Posse's GitHub repository. Since there's a default, this is typically
      not supplied by the user. When running this action on github.com, the default value is sufficient. When running on
      GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    default: ${{ github.server_url == 'https://github.com' && github.token || '' }}
outputs:
  status:
    description: Apply Status. Either 'succeeded' or 'failed'
    value: ${{ steps.apply.outputs.status }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Read Atmos GitOps config
      ## We have to reference cloudposse fork of https://github.com/blablacar/action-config-levels
      ## before https://github.com/blablacar/action-config-levels/pull/16 would be merged
      uses: cloudposse/github-action-config-levels@nodejs20
      id: config
      with:
        output_properties: true
        patterns: |
          - ${{ inputs.atmos-gitops-config-path }}

    - name: Set atmos cli config path vars
      shell: bash
      run: |-
        echo "ATMOS_CLI_CONFIG_PATH=$(realpath ${{ steps.config.outputs.atmos-config-path }})" >> $GITHUB_ENV

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ steps.config.outputs.terraform-version }}
        terraform_wrapper: false

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Atmos
      uses: cloudposse/github-action-setup-atmos@v1
      with:
        atmos-version: ${{ steps.config.outputs.atmos-version }}
        token: ${{ inputs.token }}
        install-wrapper: false

    - name: Filter Atmos Settings Value
      uses: cloudposse/github-action-atmos-get-setting@v1
      id: atmos-github-actions-enabled
      with:
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        settings-path: settings.github.actions_enabled

    - name: Define Job Control State Variables
      shell: bash
      run: |
        echo "DEBUG_ENABLED=${{ inputs.debug }}" >> $GITHUB_ENV
        echo "ACTIONS_ENABLED=false" >> $GITHUB_ENV
        echo "INFRACOST_ENABLED=false" >> $GITHUB_ENV

    - name: Check If GitHub Actions is Enabled For Component
      shell: bash
      run: |
        if [[ "${{ steps.atmos-github-actions-enabled.outputs.value }}" == "true" ]]; then
          echo "ACTIONS_ENABLED=true" >> $GITHUB_ENV
        else
          echo "ACTIONS_ENABLED=false" >> $GITHUB_ENV
        fi

    - name: Find component path
      if: env.ACTIONS_ENABLED == 'true'
      uses: cloudposse/github-action-atmos-get-setting@v1
      id: component-path
      with:
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        settings-path: component_info.component_path

    - name: Find atmos cli base path
      if: env.ACTIONS_ENABLED == 'true'
      uses: cloudposse/github-action-atmos-get-setting@v1
      id: base-path
      with:
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        settings-path: atmos_cli_config.base_path

    - name: Set atmos cli base path vars
      if: env.ACTIONS_ENABLED == 'true'
      shell: bash
      run: |-
        # Set ATMOS_BASE_PATH allow `cloudposse/utils` provider to read atmos config from the correct path 
        ATMOS_BASE_PATH="${{ steps.base-path.outputs.value }}"
        echo "ATMOS_BASE_PATH=$(realpath ${ATMOS_BASE_PATH:-./})" >> $GITHUB_ENV
        
    - name: Install tfcmt
      if: env.ACTIONS_ENABLED == 'true'    
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: suzuki-shunsuke/tfcmt
        tag: v4.6.0

    - name: Install terraform-docs
      if: env.ACTIONS_ENABLED == 'true'
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: terraform-docs/terraform-docs
        tag: v0.17.0

    - name: Define Job Variables
      if: env.ACTIONS_ENABLED == 'true'
      id: vars
      shell: bash
      run: |
        STACK_NAME=$(echo "${{ inputs.stack }}" | sed 's#/#_#g')
        COMPONENT_PATH=${{ steps.component-path.outputs.value }}
        COMPONENT_NAME=$(echo "${{ inputs.component }}" | sed 's#/#_#g')
        COMPONENT_SLUG="$STACK_NAME-$COMPONENT_NAME"
        PLAN_FILE="$( realpath ${COMPONENT_PATH})/$COMPONENT_SLUG-${{ inputs.sha }}.planfile"
        LOCK_FILE="$( realpath ${COMPONENT_PATH})/.terraform.lock.hcl"

        echo "stack_name=$STACK_NAME" >> $GITHUB_OUTPUT
        echo "component_name=$COMPONENT_NAME" >> $GITHUB_OUTPUT
        echo "component_slug=$COMPONENT_SLUG" >> $GITHUB_OUTPUT
        echo "component_path=${COMPONENT_PATH}" >> $GITHUB_OUTPUT
        echo "plan_file=$PLAN_FILE" >> $GITHUB_OUTPUT
        echo "lock_file=$LOCK_FILE" >> $GITHUB_OUTPUT

    - name: Configure State AWS Credentials
      if: env.ACTIONS_ENABLED == 'true'
      uses: aws-actions/configure-aws-credentials@v2.2.0
      with:
        aws-region: ${{ steps.config.outputs.aws-region }}
        role-to-assume: ${{ steps.config.outputs.terraform-state-role }}
        role-session-name: "atmos-terraform-state-gitops"
        mask-aws-account-id: "no"

    - name: Retrieve Plan
      if: env.ACTIONS_ENABLED == 'true'
      uses: cloudposse/github-action-terraform-plan-storage@v1
      id: retrieve-plan
      continue-on-error: true
      with:
        action: getPlan
        planPath: ${{ steps.vars.outputs.plan_file }}
        commitSHA: ${{ inputs.sha }}
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        tableName: ${{ steps.config.outputs.terraform-state-table }}
        bucketName: ${{ steps.config.outputs.terraform-state-bucket }}

    - name: Retrieve Lockfile
      if: env.ACTIONS_ENABLED == 'true'
      uses: cloudposse/github-action-terraform-plan-storage@v1
      continue-on-error: true
      with:
        action: getPlan
        planPath: ${{ steps.vars.outputs.lock_file }}
        commitSHA: ${{ inputs.sha }}
        component: ${{ inputs.component }}
        stack: "${{ inputs.stack }}-lockfile"
        tableName: ${{ steps.config.outputs.terraform-state-table }}
        bucketName: ${{ steps.config.outputs.terraform-state-bucket }}

    - name: Configure AWS Credentials
      if: env.ACTIONS_ENABLED == 'true'
      uses: aws-actions/configure-aws-credentials@v2.2.0
      with:
        aws-region: ${{ steps.config.outputs.aws-region }}
        role-to-assume: ${{ steps.config.outputs.terraform-apply-role }}
        role-session-name: "atmos-terraform-apply-gitops"
        mask-aws-account-id: "no"

    - name: Atmos Setup Workspace
      if: env.ACTIONS_ENABLED == 'true'
      id: atmos-init
      shell: bash
      run: |
        atmos terraform workspace ${{ inputs.component }} -s ${{ inputs.stack }}

    - name: Check Whether Infracost is Enabled
      if: env.ACTIONS_ENABLED == 'true'
      shell: bash
      run: |
        if [[ "${{ steps.config.outputs.enable-infracost }}" == "true" ]]; then
          echo "INFRACOST_ENABLED=true" >> $GITHUB_ENV
        else
          echo "INFRACOST_ENABLED=false" >> $GITHUB_ENV
        fi

    - name: Setup Infracost
      if: env.INFRACOST_ENABLED == 'true'
      uses: infracost/actions/setup@v2
      with:
        api-key: ${{ inputs.infracost-api-key }}

    - name: Generate Infracost Diff
      if: env.INFRACOST_ENABLED == 'true'
      shell: bash
      run: |
        infracost diff \
          --path="${{ steps.vars.outputs.plan_file }}.json" \
          --format=diff \
          --project-name "${{ inputs.stack }}-${{ inputs.component }}" \
          --out-file=/tmp/infracost.txt
        infracost diff \
          --path="${{ steps.vars.outputs.plan_file }}.json" \
          --format=json \
          --project-name "${{ inputs.stack }}-${{ inputs.component }}" \
          --out-file=/tmp/infracost.json

    - name: Debug Infracost
      if: env.INFRACOST_ENABLED == 'true' && env.DEBUG_ENABLED == 'true'
      shell: bash
      run: |
        cat ${{ steps.vars.outputs.plan_file }}.json
        cat /tmp/infracost.txt
        cat /tmp/infracost.json

    - name: Set Infracost Variables
      if: env.INFRACOST_ENABLED == 'true'
      id: infracost-diff
      shell: bash
      run: |
        if [[ "${{ steps.config.outputs.enable-infracost }}" == "true" ]]; then
          INFRACOST_DIFF_TOTAL_MONTHLY_COST=$(cat /tmp/infracost.json | jq --raw-output .diffTotalMonthlyCost)
          INFRACOST_DETAILS_DIFF_BREAKDOWN="$(cat /tmp/infracost.txt | base64 --wrap 0)"
        else
          INFRACOST_DIFF_TOTAL_MONTHLY_COST="0"
          INFRACOST_DETAILS_DIFF_BREAKDOWN=""
        fi

        echo "infracost_details_diff_breakdown=$INFRACOST_DETAILS_DIFF_BREAKDOWN" >> "$GITHUB_OUTPUT"
        echo "infracost_diff_total_monthly_cost=$INFRACOST_DIFF_TOTAL_MONTHLY_COST" >> "$GITHUB_OUTPUT"

    - name: Terraform Apply
      if: env.ACTIONS_ENABLED == 'true'
      id: apply
      shell: bash
      continue-on-error: true
      working-directory: ./${{ steps.vars.outputs.component_path }}
      run: |
        EXIT_CODE=0

        tfcmt \
          --config "${{ github.action_path }}/config/atmos_github_summary.yaml" \
          -var "target:${{ inputs.stack }}-${{ inputs.component }}" \
          -var "component:${{ inputs.component }}" \
          -var "stack:${{ inputs.stack }}" \
          -var "job:${{ github.job }}" \
          -var "infracost_details_diff_breakdown:${{ steps.infracost-diff.outputs.infracost_details_diff_breakdown }}" \
          -var "infracost_total_monthly_cost:${{ steps.infracost-diff.outputs.infracost_diff_total_monthly_cost }}" \
          -var "logoImage:${{ inputs.branding-logo-image }}" \
          -var "logoUrl:${{ inputs.branding-logo-url }}" \
          --output "${{ github.workspace }}/atmos-apply-summary.md" \
          --log-level $([[ "${{ inputs.debug }}" == "true" ]] && echo "DEBUG" || echo "INFO") \
          apply -- terraform apply ${{ steps.vars.outputs.plan_file }} || EXIT_CODE=$?
        
        terraform output --json > output_values.json
        
        echo "terraform-docs -c ${{ github.action_path }}config/tfdocs-config.yaml ./"
        
        terraform-docs -c ${{ github.action_path }}config/tfdocs-config.yaml --output-file ${{ github.workspace }}/atmos-apply-summary.md ./
        
        sed -i "s#\`<sensitive>\`#![Sensitive](https://img.shields.io/badge/sensitive-c40000?style=for-the-badge)#" ${{ github.workspace }}/atmos-apply-summary.md
        sed -i "s#\`\"#\`#" ${{ github.workspace }}/atmos-apply-summary.md

        cat "${{ github.workspace }}/atmos-apply-summary.md" >> $GITHUB_STEP_SUMMARY

        if [ $EXIT_CODE -eq 0 ]; then
          echo "status=succeeded" >> $GITHUB_OUTPUT
          echo "Terraform apply executed successfully"
        else
          echo "status=failed" >> $GITHUB_OUTPUT
          echo "Terraform apply failed"
        fi

        # Link to a job that executed this action
        echo "[Job](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> "${{ github.workspace }}/atmos-apply-summary.md"
