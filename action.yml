name: 'GitHub Action Atmos Terraform Apply'
description: 'GitHub Action Atmos Terraform Apply'
author: hello@cloudposse.com
branding:
  icon: 'server'
  color: 'white'
inputs:
  component:
    description: "The name of the component to apply."
    required: true
  stack:
    description: "The stack name for the given component."
    required: true
  component-path:
    description: "The path to the base component. Atmos defines this value as component_path."
    required: true
  terraform-apply-role:
    description: "The AWS role to be used to apply Terraform."
    required: true
  terraform-state-role:
    description: "The AWS role to be used to retrieve the planfile from AWS."
    required: true
  terraform-state-bucket:
    description: "The S3 Bucket where the planfiles are stored."
    required: true
  terraform-state-table:
    description: "The DynamoDB table where planfile metadata is stored."
    required: true
  aws-region:
    description: "AWS region for assuming identity."
    required: false
    default: "us-east-1"
  atmos-version:
    description: "Atmos version to use for vendoring. Default 'latest'"
    required: false
    default: 'latest'
  terraform-version:
    description: 'The version of Terraform CLI to install. Instead of full version string you can also specify constraint string starting with "<" (for example `<1.13.0`) to install the latest version satisfying the constraint. A value of `latest` will install the latest version of Terraform CLI. Defaults to `latest`.'
    default: 'latest'
    required: false
  enable-infracost:
    description: "Whether to enable infracost summary. Requires secret `infracost-api-key` to be specified. Default: 'false"
    default: 'false'
    required: false
  infracost-api-key:
    description: "Infracost API key"
    required: false
  debug:
    description: "Enable action debug mode. Default: 'false'"
    default: 'false'
    required: false
  token:
    description:
      Used to pull node distributions for Atmos from Cloud Posse's GitHub repository. Since there's a default, this is typically
      not supplied by the user. When running this action on github.com, the default value is sufficient. When running on
      GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    default: ${{ github.server_url == 'https://github.com' && github.token || '' }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform-version: ${{ inputs.terraform-version }}

    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - uses: cloudposse/github-action-setup-atmos@v1
      with:
        atmos-version: ${{ inputs.atmos-version }}
        token: ${{ inputs.token }}
        install-wrapper: false

    - name: Filter Atmos Settings Value
      uses: cloudposse/github-action-atmos-get-setting@main
      id: atmos-settings
      with:
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        settings-path: github.actions_enabled

    - name: Check if Action is Enable
      id: settings
      shell: bash
      run: |
        if [[ "${{ steps.atmos-settings.outputs.value }}" == "true" ]]; then
          echo "actions_enabled=true" >> $GITHUB_OUTPUT
        else
          echo "actions_enabled=false" >> $GITHUB_OUTPUT
        fi

    - name: Get Planfile Name
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      id: planfile
      shell: bash
      run: |
        PLAN_FILE=$(echo "${{ inputs.stack }}-${{ inputs.component }}-${{github.sha}}.planfile" | sed 's#/#_#g') 
        PLAN_FILE_PATH=$(pwd)
        echo "plan_file=$PLAN_FILE" >> $GITHUB_OUTPUT
        echo "plan_file_path=$PLAN_FILE_PATH" >> $GITHUB_OUTPUT

    - name: Configure State AWS Credentials
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      uses: aws-actions/configure-aws-credentials@v2.2.0
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.terraform-state-role }}
        role-session-name: "atmos-terraform-state-gitops"
        mask-aws-account-id: "no"

    - name: Retrieve Plan
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      uses: cloudposse/github-action-terraform-plan-storage@v1
      id: retrieve-plan
      with:
        action: getPlan
        planPath: ./${{ steps.planfile.outputs.plan_file }}
        component: ${{ inputs.component }}
        stack: ${{ inputs.stack }}
        tableName: ${{ inputs.terraform-state-table }}
        bucketName: ${{ inputs.terraform-state-bucket }}

    - name: Retrieve Lockfile
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      uses: cloudposse/github-action-terraform-plan-storage@v1
      with:
        action: getPlan
        planPath: ${{ inputs.component-path}}/.terraform.lock.hcl
        component: ${{ inputs.component }}
        stack: "${{ inputs.stack }}-lockfile"
        tableName: ${{ inputs.terraform-state-table }}
        bucketName: ${{ inputs.terraform-state-bucket }}

    - name: Configure Apply AWS Credentials
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      uses: aws-actions/configure-aws-credentials@v2.2.0
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.terraform-apply-role }}
        role-session-name: "atmos-terraform-apply-gitops"
        mask-aws-account-id: "no"

    # setup-tfcmt requires this PATH update when running on self-hosted (amazon linux)
    # https://github.com/shmokmt/actions-setup-tfcmt/blob/main/action.yml#L11C1-L12C1
    - name: Update path
      shell: bash
      run: |
        echo "/usr/local/bin" >> $GITHUB_PATH

    - name: Setup tfcmt
      uses: shmokmt/actions-setup-tfcmt@v2
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      with:
        version: v4.4.1

    - name: Atmos Setup Workspace
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      id: atmos-init
      shell: bash
      run: |
        ATMOS_BASE_PATH=$GITHUB_WORKSPACE atmos terraform workspace ${{ inputs.component }} -s ${{ inputs.stack }}

    - name: Setup Infracost
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) && fromJSON(inputs.enable-infracost) }}
      uses: infracost/actions/setup@v2
      with:
        api-key: ${{ inputs.infracost-api-key }}

    - name: Generate Infracost diff
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) && fromJSON(inputs.enable-infracost) }}
      shell: bash
      run: |
        PLAN_FILE="${{ steps.atmos-plan.outputs.plan_file_path }}/${{ steps.atmos-plan.outputs.plan_file }}"
        PLAN_FILE_JSON="${{ steps.atmos-plan.outputs.plan_file_path }}/${{ steps.atmos-plan.outputs.plan_file }}.json"

        cd ${{ inputs.component-path }}
        terraform show -json $PLAN_FILE > $PLAN_FILE_JSON

        infracost diff \
          --path=$PLAN_FILE_JSON \
          --format=diff \
          --project-name ${{ inputs.stack }}-${{ inputs.component }} \
          --out-file=/tmp/infracost.txt
        infracost diff \
          --path=$PLAN_FILE_JSON \
          --format=json \
          --project-name ${{ inputs.stack }}-${{ inputs.component }} \
          --out-file=/tmp/infracost.json

    - if: ${{ fromJSON(steps.settings.outputs.actions_enabled) && fromJSON(inputs.enable-infracost) && fromJSON(inputs.debug) }}
      shell: bash
      run: |
        cat ${{ steps.atmos-plan.outputs.plan_file_path }}/${{ steps.atmos-plan.outputs.plan_file }}.json
        cat /tmp/infracost.txt
        cat /tmp/infracost.json

    - name: Set infracost variables
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      id: infracost-diff
      shell: bash
      run: |
        if [[ "${{ inputs.enable-infracost }}" == "true" ]]; then
          INFRACOST_DIFF_TOTAL_MONTHLY_COST=$(cat /tmp/infracost.json | jq --raw-output .diffTotalMonthlyCost)
          INFRACOST_DETAILS_DIFF_BREAKDOWN="$(cat /tmp/infracost.txt | base64 --wrap 0)"
        else
          INFRACOST_DIFF_TOTAL_MONTHLY_COST="0"
          INFRACOST_DETAILS_DIFF_BREAKDOWN=""
        fi

        echo "infracost_details_diff_breakdown=$INFRACOST_DETAILS_DIFF_BREAKDOWN" >> "$GITHUB_OUTPUT"
        echo "infracost_diff_total_monthly_cost=$INFRACOST_DIFF_TOTAL_MONTHLY_COST" >> "$GITHUB_OUTPUT"

    - name: Terraform Apply
      if: ${{ fromJSON(steps.settings.outputs.actions_enabled) }}
      id: apply
      shell: bash
      run: |
        if [[ "${{ inputs.debug }}" == "true" ]]; then
          LOG_LEVEL="DEBUG"
        else
          LOG_LEVEL="INFO"
        fi
        cd ${{ inputs.component-path }}
        tfcmt \
          --config "${{ github.action_path }}/config/atmos_github_summary.yaml" \
          -var "target:${{ inputs.stack }}-${{ inputs.component }}" \
          -var "component:${{ inputs.component }}" \
          -var "stack:${{ inputs.stack }}" \
          -var "job:${{ github.job }}" \
          -var "infracost_details_diff_breakdown:${{ steps.infracost-diff.outputs.infracost_details_diff_breakdown }}" \
          -var "infracost_total_monthly_cost:${{ steps.infracost-diff.outputs.infracost_diff_total_monthly_cost }}" \
          --output $GITHUB_STEP_SUMMARY \
          apply -- terraform apply ${{ steps.planfile.outputs.plan_file_path }}/${{ steps.planfile.outputs.plan_file }} \
          -no-color
